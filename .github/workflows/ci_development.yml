name: CI Development
on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
jobs:
    ci_dev:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
            - name: Install PNPM
              uses: pnpm/action-setup@v2
            - name: Setup node env
              uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
              with:
                  cache: 'pnpm'
                  check-latest: true
                  node-version: 'lts/*'
            - name: Setup Pages
              if: ${{ !github.event.issue.pull_request && github.event.action != 'opened' && github.event.action != 'synchronize' }}
              uses: actions/configure-pages@1f0c5cde4bc74cd7e1254d0cb4de8d49e9068c7d # v4.0.0
              with:
                  static_site_generator: nuxt
            - name: Restore cache
              if: ${{ !github.event.issue.pull_request && github.event.action != 'opened' && github.event.action != 'synchronize' }}
              uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
              with:
                  path: |
                      dist
                      .nuxt
                  key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
                  restore-keys: |
                      ${{ runner.os }}-nuxt-build-
            - name: Install dependencies
              run: pnpm install
            - name: Run linter
              run: pnpm prepare && pnpm lint
            - name: Run static website generator
              run: pnpm build
            - name: Upload artifact
              if: ${{ !github.event.issue.pull_request && github.event.action != 'opened' && github.event.action != 'synchronize' }}
              uses: actions/upload-pages-artifact@0252fc4ba7626f0298f0cf00902a25c6afc77fa8 # v3.0.0
              with:
                  path: dist/spa/
    ci_dev_deploy:
        if: ${{ !github.event.issue.pull_request && github.event.action != 'opened' && github.event.action != 'synchronize' }}
        needs: ci_dev
        runs-on: ubuntu-latest
        concurrency:
            group: 'pages'
            cancel-in-progress: true
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        permissions:
            pages: write # to deploy to Pages
            id-token: write # to verify the deployment originates from an appropriate source
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@decdde0ac072f6dcbe43649d82d9c635fff5b4e4 # v4.0.4
